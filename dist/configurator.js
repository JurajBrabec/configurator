var c=require("path"),{statSync:l}=require("fs");module.exports.Type={Array:"arr",Bool:"bool",jsFile:"js",File:"file",Num:"num",Path:"path",String:"str"};var i=process.argv.slice(2),y=process.env,d="-+/",g="=:",h=",;|",o={},u=[],m=e=>new RegExp(`^[${d}]+(?<argument>${e.arg||e.name})(?:[${g}](?<value>.*))?`,"i"),T=e=>{let r=E(e);return r===void 0&&(r=o[e.name]),r===void 0&&(r=e.default),r===void 0&&e.type===exports.Type.Bool&&(r=!1),r},E=e=>{if(e.env===!1)return;let r=e.env||e.name.toUpperCase();return y[r]},A=e=>{if(e.arg===!1)return;let r=m(e),n=i.findIndex(f=>r.test(f));if(n===-1)return;let{value:t}=i[n].match(r).groups;return t===void 0&&e.type===exports.Type.Bool&&(t=!0),t===void 0&&n<i.length&&(t=i[n+1]),t},F=(e,r)=>{let n=e;switch(r.type){case exports.Type.Array:Array.isArray(n)||(n=e.split(new RegExp(`[${h}]`)));break;case exports.Type.Num:n=parseInt(e);break;case exports.Type.File:n=!1,l(e).isFile()&&(n=c.resolve(e));break;case exports.Type.Path:n=!1,l(c.resolve(e)).isDirectory()&&(n=c.resolve(e));break}return typeof r.do=="function"&&(n=r.do(n)),n},j=e=>{let r=require(c.resolve(e));return o={...o,...r},o},p=e=>{let r;try{if(r=A(e)||T(e),r===void 0){if(e.required)throw new Error("missing required variable")}else r=F(r,e)}catch(n){throw new Error(`'${e.name}' ${n.message} (${e.arg}=${r})`)}return o[e.name]=r,r};module.exports.compile=(e=u)=>{try{return e.filter(r=>r.type===exports.Type.jsFile).map(r=>j(p(r))),e.filter(r=>r.type!==exports.Type.jsFile).map(r=>p(r)),o}catch(r){throw new Error(`Error: ${r.message}`)}};var w=(e,r)=>{let n={type:e};return typeof r=="string"&&(n.name=r),typeof r=="object"&&Object.keys(r).forEach(t=>{n.name=t,Object.entries(r[t]).forEach(([f,a])=>n[f]=a)}),n},s=(e,r)=>(r.forEach(n=>u.push(w(e,n))),exports.expect);module.exports.expect={new:()=>(u=[],exports.expect),array:(...e)=>s(exports.Type.Array,e),bool:(...e)=>s(exports.Type.Bool,e),jsFile:(...e)=>s(exports.Type.jsFile,e),file:(...e)=>s(exports.Type.File,e),num:(...e)=>s(exports.Type.Num,e),path:(...e)=>s(exports.Type.Path,e),string:(...e)=>s(exports.Type.String,e),save:()=>u};
